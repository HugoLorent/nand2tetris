function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 16383
pop static 2
push static 1
pop static 3
push static 0
push static 1
add
push static 2
push static 1
sub
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push static 1
push constant 1
add
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push static 0
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 4
push argument 0
push constant 1
lt
not
if-goto IF_ELSE_0
push constant 5
call Sys.error 1
pop temp 0
goto IF_END_1
label IF_ELSE_0
label IF_END_1
push static 3
pop local 0
push constant 0
pop local 1
label WHILE_LOOP_2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END_3
push static 0
push local 0
add
pop pointer 1
push that 0
pop local 2
push local 2
push argument 0
push constant 1
add
gt
not
if-goto IF_ELSE_4
push local 0
push argument 0
add
push constant 2
add
pop local 3
push static 0
push local 3
add
push local 2
push argument 0
sub
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push local 3
push constant 1
add
add
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push local 0
add
push argument 0
push constant 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push local 0
push constant 1
add
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 0
eq
not
if-goto IF_ELSE_6
push local 3
pop static 3
goto IF_END_7
label IF_ELSE_6
push static 0
push local 1
push constant 1
add
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END_7
push local 0
push constant 2
add
return
goto IF_END_5
label IF_ELSE_4
label IF_END_5
push local 2
push argument 0
push constant 2
add
eq
not
if-goto IF_ELSE_8
push local 1
push constant 0
eq
not
if-goto IF_ELSE_10
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop static 3
goto IF_END_11
label IF_ELSE_10
push static 0
push local 1
push constant 1
add
add
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END_11
push local 0
push constant 2
add
return
goto IF_END_9
label IF_ELSE_8
label IF_END_9
push local 0
pop local 1
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
goto WHILE_LOOP_2
label WHILE_END_3
push constant 6
call Sys.error 1
pop temp 0
push constant 0
return
function Memory.deAlloc 1
push argument 0
push constant 0
eq
not
if-goto IF_ELSE_12
push constant 0
return
goto IF_END_13
label IF_ELSE_12
label IF_END_13
push argument 0
push constant 2
sub
pop local 0
push static 0
push local 0
push constant 1
add
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
pop static 3
push constant 0
return
